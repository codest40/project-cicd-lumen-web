name: CI/CD Pipeline - Lumen Web

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test_build:
    name: 🧪 Build & Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: lumen_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      EXTERNAL_DB_URL: postgresql://postgres:password@localhost:5432/lumen_test
      PYTHONUNBUFFERED: 1

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          cd lumen_web
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint code
        run: |
          pip install flake8
          flake8 lumen_web --count --select=E9,F63,F7,F82 --show-source --statistics || true

      - name: Run DB Connection Test
        run: |
          python - <<'PYCODE'
          from lumen_web.db import get_db_connection
          conn = get_db_connection()
          if conn:
              print("✅ Database connection successful in CI")
              conn.close()
          else:
              raise SystemExit("❌ Database test failed")
          PYCODE

      - name: Build Docker image
        run: docker build -t lumen_web-test ./lumen_web

  deploy:
    name: 🚀 Deploy to Render
    runs-on: ubuntu-latest
    needs: test_build
    if: success() && !contains(github.event.head_commit.message, 'skip deploy')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID_LUMEN }}
        run: |
          echo "Triggering deploy on Render..."
          response=$(curl -s -o /tmp/response.json -w "%{http_code}" -X POST \
            -H "Accept: application/json" \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -d "{\"serviceId\": \"$RENDER_SERVICE_ID\"}" \
            https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys)

          if [ "$response" = "201" ]; then
            echo "✅ Render deploy triggered successfully"
          else
            echo "❌ Render deploy failed"
            cat /tmp/response.json
            exit 1
          fi


    # NNOTIFICATION
      - name: Send email on failure
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "❌ Lumen Web Deploy Failed"
          to: "rundailytest@gmail.com"
          from: "GitHub CI <no-reply@Lumen_Web_App_Test.com>"
          body: |
            The Render deploy for Lumen Web failed.
            Repo: ${{ github.repository }}
            Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
